# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Compile executable
        run : |
             wget https://go.dev/dl/go1.19.linux-amd64.tar.gz
             rm -rf /usr/local/go && tar -C /usr/local -xzf go1.19.linux-amd64.tar.gz
             export PATH=$PATH:/usr/local/go/bin
             cd handler 
             go get github.com/aws/aws-lambda-go/lambda
             GOOS=linux go build main.go
             ls -ll
             zip function.zip main

  package:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Upload code as zip file to S3
        uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: function/function.zip
          destination_dir: ${{format('{{image_store_{0}.zip}}', $GITHUB_SHA)}}

  deploy:
    runs-on : ubuntu-latest
    needs: package

    steps:
      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ImageStoreStack
          template: format('{{{0}/imageStoreStack.yaml}}', $GITHUB_WORKSPACE)
